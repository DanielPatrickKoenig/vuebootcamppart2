(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'function' object has no attribute 'to_dict'"
p3
sS'layer'
p4
S'C:\\projects\\web2py\\applications\\bootcamp_round3\\controllers/default.py'
p5
sS'code'
p6
S'def index():\n    return dict()\n\n\ndef get_data():\n    import pandas as pd\n    import os\n    import ujson\n    df = pd.read_csv(os.path.join(request.folder, \'private\', \'data/dataset_1/Video_Games_Sales_as_at_22_Dec_2016.csv\'))\n    #print df\n    #genres = df.transpose().groupby(\'Global_Sales\')[[\'Action\',\'Adventure\',\'Fighting\',\'Misc\',\'Platform\',\'Puzzle\',\'Racing\',\'Role-Playing\',\'Shooter\',\'Simulation\',\'Sports\',\'Strategy\']].sum()\n    regions = df.groupby(\'Genre\')[[\'NA_Sales\',\'EU_Sales\',\'JP_Sales\',\'Other_Sales\']].sum()\n    systems = df.groupby(\'Platform\')[[\'NA_Sales\',\'EU_Sales\',\'JP_Sales\',\'Other_Sales\']].sum()\n    publishers = df.groupby(\'Publisher\')[[\'NA_Sales\',\'EU_Sales\',\'JP_Sales\',\'Other_Sales\']].sum()\n    years = df.groupby(\'Year_of_Release\')[[\'NA_Sales\',\'EU_Sales\',\'JP_Sales\',\'Other_Sales\',\'Global_Sales\']].sum()\n    names = df.groupby(\'Name\')[[\'NA_Sales\',\'EU_Sales\',\'JP_Sales\',\'Other_Sales\',\'Global_Sales\']].sum()\n    #print years  \n\n    output = {}\n    output[\'regions\'] = regions.to_dict()\n    output[\'genres\'] = regions.transpose().to_dict()\n    output[\'systems\'] = systems.transpose().to_dict()\n    output[\'publishers\'] = publishers.transpose().to_dict()\n    #output[\'genres\'] = genres.to_dict()\n    output[\'years\'] = years.to_dict()\n    output[\'names\'] = names.to_dict()\n    output[\'namelist\'] = output[\'names\'][\'Global_Sales\'].keys()\n    output[\'genrelist\'] = output[\'genres\'].keys()\n    output[\'publisherlist\'] = output[\'publishers\'].keys()\n    output[\'systemlist\'] = output[\'systems\'].keys()\n    \n    #ourput[\'name_list\'] = output[\'names\'][\'Global_Sales\'].keys()\n\n\n    return ujson.dumps(output)\n\ndef update_data():\n    import pandas as pd\n    import os\n    import ujson\n\n    df = pd.read_csv(os.path.join(request.folder, \'private\', \'data/dataset_1/Video_Games_Sales_as_at_22_Dec_2016.csv\'))\n\n    genre = existsOrElse(request.vars[\'genre[]\'],[])\n    system = existsOrElse(request.vars[\'system[]\'],[])\n    publisher = existsOrElse(request.vars[\'publisher[]\'],[])\n    game = existsOrElse(request.vars[\'game[]\'],[])\n\n    udf = df[df[\'Genre\'].isin(genre) | df[\'Platform\'].isin(system) | df[\'Publisher\'].isin(publisher) | df[\'Name\'].isin(game)]\n\n    sales = udf[[\'NA_Sales\',\'EU_Sales\',\'JP_Sales\',\'Other_Sales\']].sum()\n\n    output = {}\n\n    output[\'sales\'] = sales.transpose.to_dict()\n\n    print output\n    \n    return ujson.dumps(request.vars)\n\ndef existsOrElse(v,d):\n    output = v\n    if output is None:\n        output = d\n    elif isinstance(output, str):\n        output = [v]\n    return output\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(update_data)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\projects\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\projects\\web2py\\applications\\bootcamp_round3\\controllers/default.py", line 108, in <module>\n  File "C:\\projects\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\projects\\web2py\\applications\\bootcamp_round3\\controllers/default.py", line 55, in update_data\n    output[\'sales\'] = sales.transpose.to_dict()\nAttributeError: \'function\' object has no attribute \'to_dict\'\n'
p11
s.